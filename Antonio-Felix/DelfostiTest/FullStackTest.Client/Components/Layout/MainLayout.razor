@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@inherits LayoutComponentBase

@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudThemeProvider Theme="MTPTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<Loading />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudText Typo="Typo.subtitle1" Class="d-none d-sm-block">@Email</MudText>
        <MudSpacer />
    </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1" Style="background-color:ghostwhite">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">Gestión de Proyectos</MudText>
            </MudDrawerHeader>
            <NavMenu />
        </MudDrawer>
        <MudMainContent>
            <ChildContent>
                <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="my-4 pt-4">
                    @Body
            </MudContainer>
        </ChildContent>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    string Email = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var auth = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (auth.User.Identity.IsAuthenticated)
        {
            Email = auth.User.FindFirst("Email")!.Value;
            StateHasChanged();
        }
    }

    MudTheme MTPTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = Colors.Blue.Darken4,
                AppbarBackground = Colors.Blue.Darken4
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.BlueGray.Lighten1
            }
        };

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
